{"version":3,"sources":["webpack:///./src/views/Request.vue","webpack:///./src/views/Request.vue?a27a"],"names":["class","for","value","loading","request","back","title","fio","phone","currency","amount","type","status","id","remove","hasChanges","update","$route","params","setup","store","route","router","dispatch","push","data","components","AppPage","AppLoader","AppStatus","render"],"mappings":"0JAac,Y,GAGLA,MAAM,gB,EACT,eAAkC,SAA3BC,IAAI,UAAS,UAAM,G,EAExB,eAAsC,UAA9BC,MAAM,QAAO,YAAQ,G,EAC7B,eAA0C,UAAlCA,MAAM,aAAY,WAAO,G,EACjC,eAAuC,UAA/BA,MAAM,UAAS,WAAO,G,EAC9B,eAA4C,UAApCA,MAAM,WAAU,eAAW,G,SAO9BF,MAAM,0B,8HA5BC,EAAAG,S,iBAAlB,eAAwC,YACC,EAAAC,S,iBAAzC,eA0BW,G,MA1BDC,KAAA,GAAKC,MAAM,U,yBACnB,iBAEI,CAFJ,eAEI,UADF,eAAiD,cAAzC,kBAAe,eAAG,EAAAF,QAAQG,KAAG,KAEvC,eAEI,UADF,eAA6C,cAArC,YAAS,eAAG,EAAAH,QAAQI,OAAK,KAEnC,eAEI,UADF,eAAsD,cAA9C,UAAO,eAAG,EAAAC,SAAS,EAAAL,QAAQM,SAAM,KAE3C,eAEI,UADF,eAAyE,e,EAAzD,eAAgD,GAAnCC,KAAM,EAAAP,QAAQQ,Q,qBAG7C,eAQM,MARN,EAQM,CAPJ,E,eACA,eAKS,UALDC,GAAG,S,qDAAkB,EAAAD,OAAM,K,CACjC,EACA,EACA,EACA,G,cAJ2B,EAAAA,YAQ/B,eAA2D,UAAnDZ,MAAM,aAAc,QAAK,8BAAE,EAAAc,QAAA,EAAAA,OAAA,sBAAQ,WACD,EAAAC,Y,iBAA1C,eAAuE,U,MAA/Df,MAAM,MAAO,QAAK,8BAAE,EAAAgB,QAAA,EAAAA,OAAA,sBAA0B,a,mDAExD,eAEK,KAFL,EAA0C,kBAC1B,eAAG,EAAAC,OAAOC,OAAOL,IAAK,SACtC,I,gHAWe,GACbM,MADa,WAEX,IAAMhB,EAAU,gBAAI,GACdiB,EAAQ,iBACRC,EAAQ,iBACRjB,EAAU,eAAI,IACdQ,EAAS,eAAI,IACbU,EAAS,iBAEf,eAAS,wCAAC,2GACRnB,EAAQD,OAAQ,EADR,SAEckB,EAAMG,SAAS,kBAAmBF,EAAMH,OAAOL,IAF7D,OAERT,EAAQF,MAFA,OAGRU,EAAOV,MAAP,UAAeE,EAAQF,aAAvB,aAAe,EAAeU,OAC9BT,EAAQD,OAAQ,EAJR,4CAMV,IAAMa,EAAa,gBAAS,kBAAMX,EAAQF,MAAMU,SAAWA,EAAOV,SAC5DY,EAAK,yDAAI,8GACPM,EAAMG,SAAS,iBAAkBF,EAAMH,OAAOL,IADvC,OAEbS,EAAOE,KAAK,KAFC,2CAAJ,qDAILR,EAAK,yDAAI,2GACPS,EADO,iCAERrB,EAAQF,OAFA,IAGXU,OAAQA,EAAOV,MACfW,GAAIQ,EAAMH,OAAOL,KAJN,SAMPO,EAAMG,SAAS,iBAAkBE,GAN1B,OAObrB,EAAQF,MAAMU,OAASA,EAAOV,MAPjB,2CAAJ,qDAUX,MAAO,CAACC,UAASC,UAASK,WAAA,KAAUK,SAAQE,SAAQJ,SAAQG,eAE9DW,WAAY,CAACC,UAAA,KAASC,YAAA,KAAWC,YAAA,OCvErC,EAAOC,OAASA,EAED","file":"js/chunk-2d0a4783.13576e15.js","sourcesContent":["<template>\n  <app-loader v-if=\"loading\"></app-loader>\n  <app-page back title=\"Заявка\" v-else-if=\"request\">\n    <p>\n      <strong>Имя владельца: {{ request.fio }}</strong>\n    </p>\n    <p>\n      <strong>Телефон: {{ request.phone }}</strong>\n    </p>\n    <p>\n      <strong>Сумма: {{ currency(request.amount) }}</strong>\n    </p>\n    <p>\n      <strong>Статус: <app-status :type=\"request.status\"></app-status></strong>\n    </p>\n\n    <div class=\"form-control\">\n      <label for=\"status\">Статус</label>\n      <select id=\"status\" v-model=\"status\">\n        <option value=\"done\">Завершен</option>\n        <option value=\"cancelled\">Отменен</option>\n        <option value=\"active\">Активен</option>\n        <option value=\"pending\">Выполняется</option>\n      </select>\n    </div>\n\n    <button class=\"btn danger\" @click=\"remove\">Удалить</button>\n    <button class=\"btn\" @click=\"update\" v-if=\"hasChanges\">Обновить</button>\n  </app-page>\n  <h3 v-else class=\"text-center text-white\">\n    Заявки с ID = {{ $route.params.id }} нет.\n  </h3>\n</template>\n\n<script>\n  import {ref, onMounted, computed} from 'vue'\n  import AppPage from '../components/ui/AppPage.vue'\n  import {useRoute, useRouter} from 'vue-router'\n  import {useStore} from 'vuex'\n  import AppLoader from '../components/ui/AppLoader.vue'\n  import AppStatus from '../components/ui/AppStatus.vue'\n  import {currency} from '../utils/currency'\n  export default {\n    setup() {\n      const loading = ref(true)\n      const store = useStore()\n      const route = useRoute()\n      const request = ref({})\n      const status = ref({})\n      const router = useRouter()\n\n      onMounted(async () => {\n        loading.value = true\n        request.value = await store.dispatch('request/loadOne', route.params.id)\n        status.value = request.value?.status\n        loading.value = false\n      })\n      const hasChanges = computed(() => request.value.status !== status.value)\n      const remove = async () => {\n        await store.dispatch('request/remove', route.params.id)\n        router.push('/')\n      }\n      const update = async () => {\n        const data = {\n          ...request.value,\n          status: status.value,\n          id: route.params.id,\n        }\n        await store.dispatch('request/update', data)\n        request.value.status = status.value\n      }\n\n      return {loading, request, currency, remove, update, status, hasChanges}\n    },\n    components: {AppPage, AppLoader, AppStatus},\n  }\n</script>\n\n<style lang=\"scss\" scoped></style>\n","import { render } from \"./Request.vue?vue&type=template&id=e27ca458\"\nimport script from \"./Request.vue?vue&type=script&lang=js\"\nexport * from \"./Request.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}