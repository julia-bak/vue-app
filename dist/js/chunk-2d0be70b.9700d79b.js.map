{"version":3,"sources":["webpack:///./src/views/Auth.vue","webpack:///./src/use/login-form.js","webpack:///./src/views/Auth.vue?eea7"],"names":["for","class","onSubmit","eError","type","id","email","eBlur","pError","password","pBlur","disabled","isSubmitting","isTooManyAttempts","useLoginForm","router","useRouter","store","useStore","useForm","handleSubmit","submitCount","useField","yup","trim","required","value","errorMessage","handleBlur","PASSWORD_MIN_LENGTH","min","computed","watch","val","setTimeout","values","dispatch","push","setup","route","query","message","error","render"],"mappings":"2IAEI,eAAwB,UAApB,mBAAe,G,EAGjB,eAAgC,SAAzBA,IAAI,SAAQ,SAAK,G,YAMxB,eAAsC,SAA/BA,IAAI,YAAW,YAAQ,G,mBAa3BC,MAAM,e,gDAvBb,eA0BO,QA1BDA,MAAM,OAAQ,SAAM,8CAAU,EAAAC,UAAA,EAAAA,SAAA,qBAAQ,e,CAC1C,EAEA,eAIM,OAJAD,MAAK,yBAA6B,EAAAE,U,CACtC,E,eACA,eAA+D,SAAxDC,KAAK,QAAQC,GAAG,Q,qDAAiB,EAAAC,MAAK,IAAG,OAAI,8BAAE,EAAAC,OAAA,EAAAA,MAAA,sB,mBAAd,EAAAD,SAC3B,EAAAH,Q,iBAAb,eAAyC,yBAAjB,EAAAA,QAAM,I,0BAGhC,eAIM,OAJAF,MAAK,yBAA6B,EAAAO,U,CACtC,E,eACA,eAAwE,SAAjEJ,KAAK,WAAWC,GAAG,W,qDAAoB,EAAAI,SAAQ,IAAG,OAAI,8BAAE,EAAAC,OAAA,EAAAA,MAAA,sB,mBAAjB,EAAAD,YACjC,EAAAD,Q,iBAAb,eAAyC,yBAAjB,EAAAA,QAAM,I,0BAGhC,eAMS,UALPP,MAAM,cACNG,KAAK,SACJO,SAAU,EAAAC,cAAgB,EAAAC,mBAC5B,UAED,gBAE+B,EAAAA,mB,iBAA/B,eAEM,MAFN,EAAkD,mE,uIClB/C,SAASC,IACd,IAAMC,EAASC,iBACTC,EAAQC,iBAFe,EAGqBC,iBAA3CC,EAHsB,EAGtBA,aAAcR,EAHQ,EAGRA,aAAcS,EAHN,EAGMA,YAHN,EAKmCC,eAC9D,QACAC,SAEGC,OACAC,SAAS,iBACTnB,MAAM,uCANGA,EALe,EAKtBoB,MAA4BvB,EALN,EAKRwB,aAAkCpB,EAL1B,EAKcqB,WAQrCC,EAAsB,EAbC,EAcsCP,eACjE,WACAC,SAEGC,OACAC,SAAS,kBACTK,IACCD,EALJ,sCAMmCA,EANnC,eAFYpB,EAde,EActBiB,MAA+BlB,EAdT,EAcLmB,aAAkCjB,EAd7B,EAciBkB,WAWxCf,EAAoBkB,gBAAS,kBAAMV,EAAYK,OAAS,KAE9DM,eAAMnB,GAAmB,SAACoB,GACpBA,GACFC,YAAW,kBAAOb,EAAYK,MAAQ,IAAI,SAG9C,IAAMxB,EAAWkB,EAAY,yDAAC,WAAOe,GAAP,0GAEpBlB,EAAMmB,SAAS,aAAcD,GAFT,OAG1BpB,EAAOsB,KAAK,KAHc,0GAAD,uDAM7B,MAAO,CACL/B,QACAG,WACAN,SACAK,SACAD,QACAG,QACAR,WACAU,eACAC,qB,gBDjBa,GACbyB,MADa,WAEX,IAAMC,EAAQ,iBACRtB,EAAQ,iBAOd,OANIsB,EAAMC,MAAMC,SACdxB,EAAMmB,SAAS,aAAc,CAC3BV,MAAO,OAAAgB,EAAA,MAAMH,EAAMC,MAAMC,SACzBrC,KAAM,YAGV,kBAAWU,OE3CjB,EAAO6B,OAASA,EAED","file":"js/chunk-2d0be70b.9700d79b.js","sourcesContent":["<template>\n  <form class=\"card\" @submit.prevent=\"onSubmit\">\n    <h1>Войти в систему</h1>\n\n    <div :class=\"['form-control', {invalid: eError}]\">\n      <label for=\"email\">Email</label>\n      <input type=\"email\" id=\"email\" v-model=\"email\" @blur=\"eBlur\" />\n      <small v-if=\"eError\">{{ eError }}</small>\n    </div>\n\n    <div :class=\"['form-control', {invalid: pError}]\">\n      <label for=\"password\">Password</label>\n      <input type=\"password\" id=\"password\" v-model=\"password\" @blur=\"pBlur\" />\n      <small v-if=\"pError\">{{ pError }}</small>\n    </div>\n\n    <button\n      class=\"btn primary\"\n      type=\"submit\"\n      :disabled=\"isSubmitting || isTooManyAttempts\"\n    >\n      Войти\n    </button>\n\n    <div class=\"text-danger\" v-if=\"isTooManyAttempts\">\n      Вы слишком часто пытаетесь войти в систему. Попробуйте позже\n    </div>\n  </form>\n</template>\n\n<script>\n  import {useLoginForm} from '../use/login-form'\n  import {useRoute} from 'vue-router'\n  import {useStore} from 'vuex'\n  import {error} from '../utils/error'\n\n  export default {\n    setup() {\n      const route = useRoute()\n      const store = useStore()\n      if (route.query.message) {\n        store.dispatch('setMessage', {\n          value: error(route.query.message),\n          type: 'warning',\n        })\n      }\n      return {...useLoginForm()}\n    },\n  }\n</script>\n\n<style lang=\"scss\" scoped></style>\n","import {computed, watch} from 'vue'\nimport * as yup from 'yup'\nimport {useField, useForm} from 'vee-validate'\nimport {useStore} from 'vuex'\nimport {useRouter} from 'vue-router'\n\nexport function useLoginForm() {\n  const router = useRouter()\n  const store = useStore()\n  const {handleSubmit, isSubmitting, submitCount} = useForm()\n\n  const {value: email, errorMessage: eError, handleBlur: eBlur} = useField(\n    'email',\n    yup\n      .string()\n      .trim()\n      .required('Введите email')\n      .email('Необходимо ввести корректный email')\n  )\n  const PASSWORD_MIN_LENGTH = 6\n  const {value: password, errorMessage: pError, handleBlur: pBlur} = useField(\n    'password',\n    yup\n      .string()\n      .trim()\n      .required('Введите пароль')\n      .min(\n        PASSWORD_MIN_LENGTH,\n        `Пароль не может быть меньше ${PASSWORD_MIN_LENGTH} символов`\n      )\n  )\n  const isTooManyAttempts = computed(() => submitCount.value >= 3)\n\n  watch(isTooManyAttempts, (val) => {\n    if (val) {\n      setTimeout(() => (submitCount.value = 0), 1500)\n    }\n  })\n  const onSubmit = handleSubmit(async (values) => {\n    try {\n      await store.dispatch('auth/login', values)\n      router.push('/')\n    } catch (e) {}\n  })\n  return {\n    email,\n    password,\n    eError,\n    pError,\n    eBlur,\n    pBlur,\n    onSubmit,\n    isSubmitting,\n    isTooManyAttempts,\n  }\n}\n","import { render } from \"./Auth.vue?vue&type=template&id=145dd021\"\nimport script from \"./Auth.vue?vue&type=script&lang=js\"\nexport * from \"./Auth.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}